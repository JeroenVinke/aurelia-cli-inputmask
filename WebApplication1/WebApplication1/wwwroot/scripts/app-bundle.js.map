{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/resources/attributes/inputmask.ts"],"names":[],"mappings":";;;IAGA;QAAA;YACE,YAAO,GAAG,cAAc,CAAC;QAC3B,CAAC;QAAD,UAAC;IAAD,CAFA,AAEC,IAAA;IAFY,kBAAG;;;;;;;;ICHhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;ICAF,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC;aACpB,eAAe,CAAC;YACf,gCAAgC;SACjC,CAAC,CAAC;QAEL,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAjBD,8BAiBC;;;;;;;;IClBD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC;;;;;;;;;;;;;;;;;ICDD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAGf,IAAa,wBAAwB;QAKpC,kCAAoB,OAAe;YAAf,YAAO,GAAP,OAAO,CAAQ;YAElC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC;QAED,2CAAQ,GAAR;YAAA,iBAaC;YAXE,OAAO,CAAC,GAAG,CAAO,MAAO,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAE,CAAC,CAAC;YAClE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,EAAE,UAAC,CAAK;gBAE5B,EAAE,CAAC,CAAC,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CACpC,CAAC;oBACA,IAAI,OAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBAC1C,OAAK,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBACrC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,OAAK,CAAC,CAAC;gBAC/B,CAAC;YACF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QAED,2CAAQ,GAAR;YAEC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC;QACF,+BAAC;IAAD,CA9BA,AA8BC,IAAA;IA9BY,wBAAwB;QADpC,8BAAU;yCAMkB,OAAO;OALvB,wBAAwB,CA8BpC;IA9BY,4DAAwB","file":"app-bundle.js","sourcesContent":["\nimport 'jquery.inputmask'; \n\nexport class App {\n  message = 'Hello World!';\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .globalResources([\n      'resources/attributes/inputmask'\n    ]);\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {autoinject} from \"aurelia-framework\"; \r\nimport * as $ from \"jquery\"; \r\nimport * as t from 'inputmask'; \r\nconsole.log(t);\r\n\r\n@autoinject \r\nexport class InputMaskCustomAttribute\r\n{\r\n\tpublic value:string; \r\n\tprivate $e:$; \r\n\r\n\tconstructor(private element:Element)\r\n\t{\r\n\t\tthis.$e = $(this.element); \r\n\t}\r\n\r\n\tattached()\r\n\t{\r\n    console.log((<any>window).Inputmask.format('123', 'currency' ));\r\n\t\tthis.$e.on(\"focusout\", (e:any ) => \r\n\t\t{\r\n\t\t\tif (this.$e.inputmask(\"isComplete\"))\r\n\t\t\t{\r\n\t\t\t\tlet event = document.createEvent('Event'); \r\n\t\t\t\tevent.initEvent('input', true, true); \r\n\t\t\t\te.target.dispatchEvent(event); \r\n\t\t\t}\r\n\t\t}); \r\n\t\tthis.$e.inputmask(this.value); \r\n\t}\r\n\r\n\tdetached()\r\n\t{\r\n\t\tthis.$e.off(\"focusout\"); \r\n\t\tthis.$e.inputmask(\"remove\"); \r\n\t}\r\n}"],"sourceRoot":"../.."}